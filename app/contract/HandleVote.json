{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addCandidate",
      "inputs": [
        {
          "name": "_name",
          "type": "string",
          "internalType": "string"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balletPaper",
      "inputs": [
        {
          "name": "_serialno",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "_cnic",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_i",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "candidateCount",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint8",
          "internalType": "uint8"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "cnicVotes",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCandidate",
      "inputs": [
        {
          "name": "_index",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct HandleVote.CandidateDetail",
          "components": [
            {
              "name": "name",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "votesCount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentTime",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getResult",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct HandleVote.VoteResult[]",
          "components": [
            {
              "name": "serialNo",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "candidateName",
              "type": "string",
              "internalType": "string"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getVoteRecord",
      "inputs": [
        {
          "name": "_serialno",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct HandleVote.CandidateDetail",
          "components": [
            {
              "name": "name",
              "type": "string",
              "internalType": "string"
            },
            {
              "name": "votesCount",
              "type": "uint256",
              "internalType": "uint256"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "serialNumbers",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "voteRecords",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "name",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "votesCount",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "votesCount",
      "inputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600f57600080fd5b50600680546001600160a01b03191633179055610e20806100316000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806381fbd3291161007157806381fbd3291461016a5780638da5cb5b1461017d578063a9a981a3146101a8578063a9bedae4146101ce578063aae46bab146101e1578063de2927891461020457600080fd5b806329cb924d146100b957806335b8e820146100ce578063462e91ec146100ee5780634c101149146101035780634ea6c7fc1461011657806379916eb414610149575b600080fd5b425b6040519081526020015b60405180910390f35b6100e16100dc36600461093c565b610219565b6040516100c5919061099b565b6101016100fc3660046109e3565b610348565b005b610101610111366004610a9c565b610419565b61013961012436600461093c565b60006020819052908152604090205460ff1681565b60405190151581526020016100c5565b61015c61015736600461093c565b610667565b6040516100c5929190610ac8565b6100bb61017836600461093c565b61070b565b600654610190906001600160a01b031681565b6040516001600160a01b0390911681526020016100c5565b6006546101bc90600160a01b900460ff1681565b60405160ff90911681526020016100c5565b6100e16101dc36600461093c565b61072c565b6101396101ef36600461093c565b60026020526000908152604090205460ff1681565b61020c6107c6565b6040516100c59190610aea565b604080518082019091526060815260006020820152600654600160a01b900460ff16821061028e5760405162461bcd60e51b815260206004820152601860248201527f43616e64696461746520646f6573206e6f74206578697374000000000000000060448201526064015b60405180910390fd5b6000828152600160205260409081902081518083019092528054829082906102b590610b66565b80601f01602080910402602001604051908101604052809291908181526020018280546102e190610b66565b801561032e5780601f106103035761010080835404028352916020019161032e565b820191906000526020600020905b81548152906001019060200180831161031157829003601f168201915b505050505081526020016001820154815250509050919050565b6006546001600160a01b0316331461039a5760405162461bcd60e51b8152602060048201526015602482015274596f752068617665206e6f20617574686f7269747960581b6044820152606401610285565b60408051808201825282815260006020808301829052600654600160a01b900460ff1682526001905291909120815181906103d59082610bef565b506020919091015160019091015560068054600160a01b900460ff169060146103fd83610cc7565b91906101000a81548160ff021916908360ff1602179055505050565b3360009081526004602052604090205460ff16156104795760405162461bcd60e51b815260206004820152601760248201527f596f75206861766520616c726561647920766f7465642e0000000000000000006044820152606401610285565b60008381526002602052604090205460ff16156104d85760405162461bcd60e51b815260206004820152601a60248201527f53657269616c206e756d62657220616c726561647920757365640000000000006044820152606401610285565b600081815260016020526040812080546104f190610b66565b9050116105405760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616e64696461746520696e6465780000000000000000006044820152606401610285565b60008281526020819052604090205460ff161561059f5760405162461bcd60e51b815260206004820152601f60248201527f434e494320697320616c72656164792070726573656e742c20736f7272792e006044820152606401610285565b3360009081526004602090815260408083208054600160ff199182168117909255868552848452828520805482168317905587855260028452828520805490911682179055848452918290528220018054916105fa83610ce6565b909155505060008181526001602090815260408083208684526003909252909120806106268382610cff565b50600191820154908201556005805491820181556000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001929092555050565b60036020526000908152604090208054819061068290610b66565b80601f01602080910402602001604051908101604052809291908181526020018280546106ae90610b66565b80156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050908060010154905082565b6005818154811061071b57600080fd5b600091825260209091200154905081565b60408051808201909152606081526000602082015260008281526002602052604090205460ff1661079f5760405162461bcd60e51b815260206004820152601b60248201527f53657269616c206e756d62657220686173206e6f7420766f74656400000000006044820152606401610285565b6000828152600360205260409081902081518083019092528054829082906102b590610b66565b60055460609060008167ffffffffffffffff8111156107e7576107e76109cd565b60405190808252806020026020018201604052801561082d57816020015b6040805180820190915260008152606060208201528152602001906001900390816108055790505b50905060005b828110156109355760006005828154811061085057610850610dd4565b600091825260208083209091015480835260039091526040822080549193509061087990610b66565b80601f01602080910402602001604051908101604052809291908181526020018280546108a590610b66565b80156108f25780601f106108c7576101008083540402835291602001916108f2565b820191906000526020600020905b8154815290600101906020018083116108d557829003601f168201915b5050505050905060405180604001604052808381526020018281525084848151811061092057610920610dd4565b60209081029190910101525050600101610833565b5092915050565b60006020828403121561094e57600080fd5b5035919050565b6000815180845260005b8181101561097b5760208185018101518683018201520161095f565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260008251604060208401526109b76060840182610955565b9050602084015160408401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156109f557600080fd5b813567ffffffffffffffff811115610a0c57600080fd5b8201601f81018413610a1d57600080fd5b803567ffffffffffffffff811115610a3757610a376109cd565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610a6657610a666109cd565b604052818152828201602001861015610a7e57600080fd5b81602084016020830137600091810160200191909152949350505050565b600080600060608486031215610ab157600080fd5b505081359360208301359350604090920135919050565b604081526000610adb6040830185610955565b90508260208301529392505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015610b5a57603f198786030184528151805186526020810151905060406020870152610b446040870182610955565b9550506020938401939190910190600101610b12565b50929695505050505050565b600181811c90821680610b7a57607f821691505b602082108103610b9a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bea57806000526020600020601f840160051c81016020851015610bc75750805b601f840160051c820191505b81811015610be75760008155600101610bd3565b50505b505050565b815167ffffffffffffffff811115610c0957610c096109cd565b610c1d81610c178454610b66565b84610ba0565b6020601f821160018114610c545760008315610c395750848201515b600184901b600019600386901b1c198216175b855550610be7565b600084815260208120601f198516915b82811015610c845787850151825560209485019460019092019101610c64565b5084821015610ca25786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610cdd57610cdd610cb1565b60010192915050565b600060018201610cf857610cf8610cb1565b5060010190565b818103610d0a575050565b610d148254610b66565b67ffffffffffffffff811115610d2c57610d2c6109cd565b610d3a81610c178454610b66565b6000601f821160018114610d6c5760008315610c39575081850154600184901b600019600386901b1c19821617610c4c565b600085815260209020601f19841690600086815260209020845b83811015610da65782860154825560019586019590910190602001610d86565b5085831015610dc45781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fdfea264697066735822122067cd3e7a415194da9ca5116fde201012d64e43858fefa58602feeb581294072864736f6c634300081b0033",
    "sourceMap": "58:2516:23:-:0;;;621:49;;;;;;;;;-1:-1:-1;645:5:23;:18;;-1:-1:-1;;;;;;645:18:23;653:10;645:18;;;58:2516;;;;;;",
    "linkReferences": {}
  },
  "networks": {
    "11155111": {
      "address": "0x7e5fCaa8770434B76D3D9e9231aB99eaC3f2ADD0"
    }
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c806381fbd3291161007157806381fbd3291461016a5780638da5cb5b1461017d578063a9a981a3146101a8578063a9bedae4146101ce578063aae46bab146101e1578063de2927891461020457600080fd5b806329cb924d146100b957806335b8e820146100ce578063462e91ec146100ee5780634c101149146101035780634ea6c7fc1461011657806379916eb414610149575b600080fd5b425b6040519081526020015b60405180910390f35b6100e16100dc36600461093c565b610219565b6040516100c5919061099b565b6101016100fc3660046109e3565b610348565b005b610101610111366004610a9c565b610419565b61013961012436600461093c565b60006020819052908152604090205460ff1681565b60405190151581526020016100c5565b61015c61015736600461093c565b610667565b6040516100c5929190610ac8565b6100bb61017836600461093c565b61070b565b600654610190906001600160a01b031681565b6040516001600160a01b0390911681526020016100c5565b6006546101bc90600160a01b900460ff1681565b60405160ff90911681526020016100c5565b6100e16101dc36600461093c565b61072c565b6101396101ef36600461093c565b60026020526000908152604090205460ff1681565b61020c6107c6565b6040516100c59190610aea565b604080518082019091526060815260006020820152600654600160a01b900460ff16821061028e5760405162461bcd60e51b815260206004820152601860248201527f43616e64696461746520646f6573206e6f74206578697374000000000000000060448201526064015b60405180910390fd5b6000828152600160205260409081902081518083019092528054829082906102b590610b66565b80601f01602080910402602001604051908101604052809291908181526020018280546102e190610b66565b801561032e5780601f106103035761010080835404028352916020019161032e565b820191906000526020600020905b81548152906001019060200180831161031157829003601f168201915b505050505081526020016001820154815250509050919050565b6006546001600160a01b0316331461039a5760405162461bcd60e51b8152602060048201526015602482015274596f752068617665206e6f20617574686f7269747960581b6044820152606401610285565b60408051808201825282815260006020808301829052600654600160a01b900460ff1682526001905291909120815181906103d59082610bef565b506020919091015160019091015560068054600160a01b900460ff169060146103fd83610cc7565b91906101000a81548160ff021916908360ff1602179055505050565b3360009081526004602052604090205460ff16156104795760405162461bcd60e51b815260206004820152601760248201527f596f75206861766520616c726561647920766f7465642e0000000000000000006044820152606401610285565b60008381526002602052604090205460ff16156104d85760405162461bcd60e51b815260206004820152601a60248201527f53657269616c206e756d62657220616c726561647920757365640000000000006044820152606401610285565b600081815260016020526040812080546104f190610b66565b9050116105405760405162461bcd60e51b815260206004820152601760248201527f496e76616c69642063616e64696461746520696e6465780000000000000000006044820152606401610285565b60008281526020819052604090205460ff161561059f5760405162461bcd60e51b815260206004820152601f60248201527f434e494320697320616c72656164792070726573656e742c20736f7272792e006044820152606401610285565b3360009081526004602090815260408083208054600160ff199182168117909255868552848452828520805482168317905587855260028452828520805490911682179055848452918290528220018054916105fa83610ce6565b909155505060008181526001602090815260408083208684526003909252909120806106268382610cff565b50600191820154908201556005805491820181556000527f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db001929092555050565b60036020526000908152604090208054819061068290610b66565b80601f01602080910402602001604051908101604052809291908181526020018280546106ae90610b66565b80156106fb5780601f106106d0576101008083540402835291602001916106fb565b820191906000526020600020905b8154815290600101906020018083116106de57829003601f168201915b5050505050908060010154905082565b6005818154811061071b57600080fd5b600091825260209091200154905081565b60408051808201909152606081526000602082015260008281526002602052604090205460ff1661079f5760405162461bcd60e51b815260206004820152601b60248201527f53657269616c206e756d62657220686173206e6f7420766f74656400000000006044820152606401610285565b6000828152600360205260409081902081518083019092528054829082906102b590610b66565b60055460609060008167ffffffffffffffff8111156107e7576107e76109cd565b60405190808252806020026020018201604052801561082d57816020015b6040805180820190915260008152606060208201528152602001906001900390816108055790505b50905060005b828110156109355760006005828154811061085057610850610dd4565b600091825260208083209091015480835260039091526040822080549193509061087990610b66565b80601f01602080910402602001604051908101604052809291908181526020018280546108a590610b66565b80156108f25780601f106108c7576101008083540402835291602001916108f2565b820191906000526020600020905b8154815290600101906020018083116108d557829003601f168201915b5050505050905060405180604001604052808381526020018281525084848151811061092057610920610dd4565b60209081029190910101525050600101610833565b5092915050565b60006020828403121561094e57600080fd5b5035919050565b6000815180845260005b8181101561097b5760208185018101518683018201520161095f565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260008251604060208401526109b76060840182610955565b9050602084015160408401528091505092915050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156109f557600080fd5b813567ffffffffffffffff811115610a0c57600080fd5b8201601f81018413610a1d57600080fd5b803567ffffffffffffffff811115610a3757610a376109cd565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715610a6657610a666109cd565b604052818152828201602001861015610a7e57600080fd5b81602084016020830137600091810160200191909152949350505050565b600080600060608486031215610ab157600080fd5b505081359360208301359350604090920135919050565b604081526000610adb6040830185610955565b90508260208301529392505050565b6000602082016020835280845180835260408501915060408160051b86010192506020860160005b82811015610b5a57603f198786030184528151805186526020810151905060406020870152610b446040870182610955565b9550506020938401939190910190600101610b12565b50929695505050505050565b600181811c90821680610b7a57607f821691505b602082108103610b9a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610bea57806000526020600020601f840160051c81016020851015610bc75750805b601f840160051c820191505b81811015610be75760008155600101610bd3565b50505b505050565b815167ffffffffffffffff811115610c0957610c096109cd565b610c1d81610c178454610b66565b84610ba0565b6020601f821160018114610c545760008315610c395750848201515b600184901b600019600386901b1c198216175b855550610be7565b600084815260208120601f198516915b82811015610c845787850151825560209485019460019092019101610c64565b5084821015610ca25786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060ff821660ff8103610cdd57610cdd610cb1565b60010192915050565b600060018201610cf857610cf8610cb1565b5060010190565b818103610d0a575050565b610d148254610b66565b67ffffffffffffffff811115610d2c57610d2c6109cd565b610d3a81610c178454610b66565b6000601f821160018114610d6c5760008315610c39575081850154600184901b600019600386901b1c19821617610c4c565b600085815260209020601f19841690600086815260209020845b83811015610da65782860154825560019586019590910190602001610d86565b5085831015610dc45781850154600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fdfea264697066735822122067cd3e7a415194da9ca5116fde201012d64e43858fefa58602feeb581294072864736f6c634300081b0033",
    "sourceMap": "58:2516:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;899:95;972:15;899:95;;;160:25:25;;;148:2;133:18;899:95:23;;;;;;;;1722:195;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1000:157::-;;;;;;:::i;:::-;;:::i;:::-;;1163:553;;;;;;:::i;:::-;;:::i;256:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;3002:14:25;;2995:22;2977:41;;2965:2;2950:18;256:41:23;2837:187:25;412:54:23;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;525:30::-;;;;;;:::i;:::-;;:::i;561:20::-;;;;;-1:-1:-1;;;;;561:20:23;;;;;;-1:-1:-1;;;;;3902:32:25;;;3884:51;;3872:2;3857:18;561:20:23;3738:203:25;587:27:23;;;;;-1:-1:-1;;;587:27:23;;;;;;;;;4118:4:25;4106:17;;;4088:36;;4076:2;4061:18;587:27:23;3946:184:25;1923:204:23;;;;;;:::i;:::-;;:::i;364:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2133:439;;;:::i;:::-;;;;;;;:::i;1722:195::-;-1:-1:-1;;;;;;;;;;;;;;;;;1832:14:23;;-1:-1:-1;;;1832:14:23;;;;1823:23;;1815:60;;;;-1:-1:-1;;;1815:60:23;;5335:2:25;1815:60:23;;;5317:21:25;5374:2;5354:18;;;5347:30;5413:26;5393:18;;;5386:54;5457:18;;1815:60:23;;;;;;;;;1892:18;;;;:10;:18;;;;;;;1885:25;;;;;;;;;;;;1892:18;;1885:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1722:195;;;:::o;1000:157::-;729:5;;-1:-1:-1;;;;;729:5:23;715:10;:19;707:53;;;;-1:-1:-1;;;707:53:23;;6073:2:25;707:53:23;;;6055:21:25;6112:2;6092:18;;;6085:30;-1:-1:-1;;;6131:18:25;;;6124:51;6192:18;;707:53:23;5871:345:25;707:53:23;1099:25:::1;::::0;;;;::::1;::::0;;;;;-1:-1:-1;1099:25:23::1;::::0;;::::1;::::0;;;1081:14:::1;::::0;-1:-1:-1;;;1081:14:23;::::1;;;1070:26:::0;;:10:::1;:26:::0;;;;;;:54;;:26;;:54:::1;::::0;:26;:54:::1;:::i;:::-;-1:-1:-1::0;1070:54:23::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;1134:14:::1;:16:::0;;-1:-1:-1;;;1134:16:23;::::1;;;::::0;:14:::1;:16;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;1000:157:::0;:::o;1163:553::-;836:10;823:24;;;;:12;:24;;;;;;;;822:25;814:61;;;;-1:-1:-1;;;814:61:23;;8859:2:25;814:61:23;;;8841:21:25;8898:2;8878:18;;;8871:30;8937:25;8917:18;;;8910:53;8980:18;;814:61:23;8657:347:25;814:61:23;1265:21:::1;::::0;;;:10:::1;:21;::::0;;;;;::::1;;1264:22;1256:61;;;::::0;-1:-1:-1;;;1256:61:23;;9211:2:25;1256:61:23::1;::::0;::::1;9193:21:25::0;9250:2;9230:18;;;9223:30;9289:28;9269:18;;;9262:56;9335:18;;1256:61:23::1;9009:350:25::0;1256:61:23::1;1371:1;1341:14:::0;;;:10:::1;:14;::::0;;;;1335:33;;::::1;::::0;::::1;:::i;:::-;;;:37;1327:73;;;::::0;-1:-1:-1;;;1327:73:23;;9566:2:25;1327:73:23::1;::::0;::::1;9548:21:25::0;9605:2;9585:18;;;9578:30;9644:25;9624:18;;;9617:53;9687:18;;1327:73:23::1;9364:347:25::0;1327:73:23::1;1419:9;:16:::0;;;::::1;::::0;;;;;;;::::1;;1418:17;1410:61;;;::::0;-1:-1:-1;;;1410:61:23;;9918:2:25;1410:61:23::1;::::0;::::1;9900:21:25::0;9957:2;9937:18;;;9930:30;9996:33;9976:18;;;9969:61;10047:18;;1410:61:23::1;9716:355:25::0;1410:61:23::1;1494:10;1481:24;::::0;;;:12:::1;:24;::::0;;;;;;;:31;;1508:4:::1;-1:-1:-1::0;;1481:31:23;;::::1;::::0;::::1;::::0;;;1523:16;;;;;;;;;:23;;;::::1;::::0;::::1;::::0;;1556:21;;;:10:::1;:21:::0;;;;;:28;;;;::::1;::::0;::::1;::::0;;1594:14;;;;;;;;;:25:::1;:27:::0;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;1656:14:23::1;::::0;;;:10:::1;:14;::::0;;;;;;;1631:22;;;:11:::1;:22:::0;;;;;;;:39:::1;1656:14:::0;1631:22;:39:::1;:::i;:::-;-1:-1:-1::0;1631:39:23::1;::::0;;::::1;::::0;;;::::1;::::0;1680:13:::1;:29:::0;;;;::::1;::::0;;-1:-1:-1;1680:29:23;;::::1;::::0;;;;-1:-1:-1;;1163:553:23:o;412:54::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;525:30::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;525:30:23;:::o;1923:204::-;-1:-1:-1;;;;;;;;;;;;;;;;;2028:21:23;;;;:10;:21;;;;;;;;2020:61;;;;-1:-1:-1;;;2020:61:23;;11824:2:25;2020:61:23;;;11806:21:25;11863:2;11843:18;;;11836:30;11902:29;11882:18;;;11875:57;11949:18;;2020:61:23;11622:351:25;2020:61:23;2098:22;;;;:11;:22;;;;;;;2091:29;;;;;;;;;;;;2098:22;;2091:29;;;:::i;2133:439::-;2223:13;:20;2175:19;;2206:14;2223:20;2283:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2283:24:23;;;;;;;;;;;;;;;;2253:54;;2323:9;2318:223;2342:6;2338:1;:10;2318:223;;;2369:14;2386:13;2400:1;2386:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;2446:19;;;:11;:19;;;;;;2416:54;;2386:16;;-1:-1:-1;2446:19:23;2416:54;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:33;;;;;;;;2508:6;2497:33;;;;2516:13;2497:33;;;2484:7;2492:1;2484:10;;;;;;;;:::i;:::-;;;;;;;;;;:46;-1:-1:-1;;2350:3:23;;2318:223;;;-1:-1:-1;2558:7:23;2133:439;-1:-1:-1;;2133:439:23:o;196:226:25:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;-1:-1:-1;369:23:25;;196:226;-1:-1:-1;196:226:25:o;427:400::-;469:3;507:5;501:12;534:6;529:3;522:19;559:1;569:139;583:6;580:1;577:13;569:139;;;691:4;676:13;;;672:24;;666:31;646:11;;;642:22;;635:63;598:12;569:139;;;573:3;753:1;746:4;737:6;732:3;728:16;724:27;717:38;816:4;809:2;805:7;800:2;792:6;788:15;784:29;779:3;775:39;771:50;764:57;;;427:400;;;;:::o;832:447::-;1029:2;1018:9;1011:21;992:4;1067:6;1061:13;1110:4;1105:2;1094:9;1090:18;1083:32;1138:51;1185:2;1174:9;1170:18;1156:12;1138:51;:::i;:::-;1124:65;;1245:2;1237:6;1233:15;1227:22;1220:4;1209:9;1205:20;1198:52;1267:6;1259:14;;;832:447;;;;:::o;1284:127::-;1345:10;1340:3;1336:20;1333:1;1326:31;1376:4;1373:1;1366:15;1400:4;1397:1;1390:15;1416:945;1485:6;1538:2;1526:9;1517:7;1513:23;1509:32;1506:52;;;1554:1;1551;1544:12;1506:52;1594:9;1581:23;1627:18;1619:6;1616:30;1613:50;;;1659:1;1656;1649:12;1613:50;1682:22;;1735:4;1727:13;;1723:27;-1:-1:-1;1713:55:25;;1764:1;1761;1754:12;1713:55;1804:2;1791:16;1830:18;1822:6;1819:30;1816:56;;;1852:18;;:::i;:::-;1901:2;1895:9;1993:2;1955:17;;-1:-1:-1;;1951:31:25;;;1984:2;1947:40;1943:54;1931:67;;2028:18;2013:34;;2049:22;;;2010:62;2007:88;;;2075:18;;:::i;:::-;2111:2;2104:22;2135;;;2176:15;;;2193:2;2172:24;2169:37;-1:-1:-1;2166:57:25;;;2219:1;2216;2209:12;2166:57;2275:6;2270:2;2266;2262:11;2257:2;2249:6;2245:15;2232:50;2328:1;2302:19;;;2323:2;2298:28;2291:39;;;;2306:6;1416:945;-1:-1:-1;;;;1416:945:25:o;2366:466::-;2443:6;2451;2459;2512:2;2500:9;2491:7;2487:23;2483:32;2480:52;;;2528:1;2525;2518:12;2480:52;-1:-1:-1;;2573:23:25;;;2693:2;2678:18;;2665:32;;-1:-1:-1;2796:2:25;2781:18;;;2768:32;;2366:466;-1:-1:-1;2366:466:25:o;3260:291::-;3437:2;3426:9;3419:21;3400:4;3457:45;3498:2;3487:9;3483:18;3475:6;3457:45;:::i;:::-;3449:53;;3538:6;3533:2;3522:9;3518:18;3511:34;3260:291;;;;;:::o;4135:993::-;4335:4;4383:2;4372:9;4368:18;4413:2;4402:9;4395:21;4436:6;4471;4465:13;4502:6;4494;4487:22;4540:2;4529:9;4525:18;4518:25;;4602:2;4592:6;4589:1;4585:14;4574:9;4570:30;4566:39;4552:53;;4640:2;4632:6;4628:15;4661:1;4671:428;4685:6;4682:1;4679:13;4671:428;;;4778:2;4774:7;4762:9;4754:6;4750:22;4746:36;4741:3;4734:49;4812:6;4806:13;4853:2;4847:9;4839:6;4832:25;4904:2;4900;4896:11;4890:18;4870:38;;4945:2;4940;4932:6;4928:15;4921:27;4971:48;5015:2;5007:6;5003:15;4989:12;4971:48;:::i;:::-;4961:58;-1:-1:-1;;5054:2:25;5077:12;;;;5042:15;;;;;4707:1;4700:9;4671:428;;;-1:-1:-1;5116:6:25;;4135:993;-1:-1:-1;;;;;;4135:993:25:o;5486:380::-;5565:1;5561:12;;;;5608;;;5629:61;;5683:4;5675:6;5671:17;5661:27;;5629:61;5736:2;5728:6;5725:14;5705:18;5702:38;5699:161;;5782:10;5777:3;5773:20;5770:1;5763:31;5817:4;5814:1;5807:15;5845:4;5842:1;5835:15;5699:161;;5486:380;;;:::o;6347:518::-;6449:2;6444:3;6441:11;6438:421;;;6485:5;6482:1;6475:16;6529:4;6526:1;6516:18;6599:2;6587:10;6583:19;6580:1;6576:27;6570:4;6566:38;6635:4;6623:10;6620:20;6617:47;;;-1:-1:-1;6658:4:25;6617:47;6713:2;6708:3;6704:12;6701:1;6697:20;6691:4;6687:31;6677:41;;6768:81;6786:2;6779:5;6776:13;6768:81;;;6845:1;6831:16;;6812:1;6801:13;6768:81;;;6772:3;;6438:421;6347:518;;;:::o;7041:1299::-;7167:3;7161:10;7194:18;7186:6;7183:30;7180:56;;;7216:18;;:::i;:::-;7245:97;7335:6;7295:38;7327:4;7321:11;7295:38;:::i;:::-;7289:4;7245:97;:::i;:::-;7391:4;7422:2;7411:14;;7439:1;7434:649;;;;8127:1;8144:6;8141:89;;;-1:-1:-1;8196:19:25;;;8190:26;8141:89;7022:1;7018:11;;;-1:-1:-1;;6998:1:25;6994:11;;;6990:24;6986:29;6976:40;;6973:57;8256:67;8250:4;8243:81;;7404:930;;7434:649;6294:1;6287:14;;;6331:4;6318:18;;-1:-1:-1;;7470:20:25;;;7588:222;7602:7;7599:1;7596:14;7588:222;;;7684:19;;;7678:26;7663:42;;7791:4;7776:20;;;;7744:1;7732:14;;;;7618:12;7588:222;;;7592:3;7838:6;7829:7;7826:19;7823:201;;;7899:19;;;7893:26;-1:-1:-1;;7982:1:25;7978:14;;;7994:3;7974:24;7970:37;7966:42;7951:58;7936:74;;7823:201;-1:-1:-1;;;;8070:1:25;8054:14;;;8050:22;8037:36;;-1:-1:-1;7041:1299:25:o;8345:127::-;8406:10;8401:3;8397:20;8394:1;8387:31;8437:4;8434:1;8427:15;8461:4;8458:1;8451:15;8477:175;8514:3;8558:4;8551:5;8547:16;8587:4;8578:7;8575:17;8572:43;;8595:18;;:::i;:::-;8644:1;8631:15;;8477:175;-1:-1:-1;;8477:175:25:o;10076:135::-;10115:3;10136:17;;;10133:43;;10156:18;;:::i;:::-;-1:-1:-1;10203:1:25;10192:13;;10076:135::o;10216:1401::-;10331:3;10325:4;10322:13;10319:26;;10338:5;;10216:1401::o;10319:26::-;10368:37;10400:3;10394:10;10368:37;:::i;:::-;10428:18;10420:6;10417:30;10414:56;;;10450:18;;:::i;:::-;10479:97;10569:6;10529:38;10561:4;10555:11;10529:38;:::i;10479:97::-;10602:1;10630:2;10622:6;10619:14;10647:1;10642:718;;;;11404:1;11421:6;11418:89;;;-1:-1:-1;11473:19:25;;;11467:26;7022:1;7018:11;;;-1:-1:-1;;6998:1:25;6994:11;;;6990:24;6986:29;6976:40;;6973:57;11533:67;6870:166;10642:718;6294:1;6287:14;;;6331:4;6318:18;;-1:-1:-1;;10678:20:25;;;6294:1;6287:14;;;6331:4;6318:18;;10842:9;10864:221;10878:7;10875:1;10872:14;10864:221;;;10960:21;;;10954:28;10939:44;;11022:1;11054:17;;;;11010:14;;;;10901:4;10894:12;10864:221;;;10868:3;11113:6;11104:7;11101:19;11098:203;;;11174:21;;;11168:28;-1:-1:-1;;11259:1:25;11255:14;;;11271:3;11251:24;11247:37;11243:42;11228:58;11213:74;;11098:203;-1:-1:-1;;;;;11347:1:25;11331:14;;;11327:22;11314:36;;-1:-1:-1;10216:1401:25:o;11978:127::-;12039:10;12034:3;12030:20;12027:1;12020:31;12070:4;12067:1;12060:15;12094:4;12091:1;12084:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "addCandidate(string)": "462e91ec",
    "balletPaper(bytes32,uint256,uint256)": "4c101149",
    "candidateCount()": "a9a981a3",
    "cnicVotes(uint256)": "4ea6c7fc",
    "getCandidate(uint256)": "35b8e820",
    "getCurrentTime()": "29cb924d",
    "getResult()": "de292789",
    "getVoteRecord(bytes32)": "a9bedae4",
    "owner()": "8da5cb5b",
    "serialNumbers(uint256)": "81fbd329",
    "voteRecords(bytes32)": "79916eb4",
    "votesCount(bytes32)": "aae46bab"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"addCandidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_serialno\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_cnic\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_i\",\"type\":\"uint256\"}],\"name\":\"balletPaper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"candidateCount\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"cnicVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getCandidate\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"}],\"internalType\":\"struct HandleVote.CandidateDetail\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getResult\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"serialNo\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"candidateName\",\"type\":\"string\"}],\"internalType\":\"struct HandleVote.VoteResult[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_serialno\",\"type\":\"bytes32\"}],\"name\":\"getVoteRecord\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"}],\"internalType\":\"struct HandleVote.CandidateDetail\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"serialNumbers\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"voteRecords\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votesCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"votesCount\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/VotingSystem.sol\":\"HandleVote\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":forge-std/=lib/forge-std/src/\"]},\"sources\":{\"src/VotingSystem.sol\":{\"keccak256\":\"0xc8824292de6f312202f1f423bce8c09020ccbe6b7ac84886aa1156dd29c1d783\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8cc9975c167257b137a706c4b1dfd6000e23123af12e4649ae57a1ab32cde6eb\",\"dweb:/ipfs/QmSKK83zGJLyiw3LuyvqsPFtJPKH6Bw5HEZ7yitP91NzHW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.27+commit.40a35a09"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addCandidate"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_serialno",
              "type": "bytes32"
            },
            {
              "internalType": "uint256",
              "name": "_cnic",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_i",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "balletPaper"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "candidateCount",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "cnicVotes",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getCandidate",
          "outputs": [
            {
              "internalType": "struct HandleVote.CandidateDetail",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "votesCount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentTime",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getResult",
          "outputs": [
            {
              "internalType": "struct HandleVote.VoteResult[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "serialNo",
                  "type": "bytes32"
                },
                {
                  "internalType": "string",
                  "name": "candidateName",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "_serialno",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getVoteRecord",
          "outputs": [
            {
              "internalType": "struct HandleVote.CandidateDetail",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "string",
                  "name": "name",
                  "type": "string"
                },
                {
                  "internalType": "uint256",
                  "name": "votesCount",
                  "type": "uint256"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "serialNumbers",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "voteRecords",
          "outputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "votesCount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "votesCount",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": ["forge-std/=lib/forge-std/src/"],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/VotingSystem.sol": "HandleVote"
      },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "src/VotingSystem.sol": {
        "keccak256": "0xc8824292de6f312202f1f423bce8c09020ccbe6b7ac84886aa1156dd29c1d783",
        "urls": [
          "bzz-raw://8cc9975c167257b137a706c4b1dfd6000e23123af12e4649ae57a1ab32cde6eb",
          "dweb:/ipfs/QmSKK83zGJLyiw3LuyvqsPFtJPKH6Bw5HEZ7yitP91NzHW"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 23
}
